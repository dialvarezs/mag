{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/nf-core/mag/main/assets/schema_input.json",
    "title": "nf-core/mag pipeline - params.input schema",
    "description": "Schema for the file provided with params.input",
    "type": "array",
    "items": {
        "type": "object",
        "properties": {
            "sample": {
                "type": "string",
                "pattern": "^\\S+$",
                "meta": ["id"],
                "errorMessage": "Sample needs to be string or integer with no spaces!"
            },
            "run": {
                "type": ["string", "integer"],
                "pattern": "^\\S+$",
                "meta": ["run"],
                "unique": ["sample"],
                "errorMessage": "Run needs to be string or integer with no spaces!"
            },
            "group": {
                "type": ["string", "integer"],
                "pattern": "^\\S+$",
                "meta": ["group"],
                "errorMessage": "Group needs to be string or integer with no spaces!"
            },
            "short_reads_1": {
                "type": "string",
                "format": "file-path",
                "exists": true,
                "pattern": "^\\S+\\.f(ast)?q\\.gz$",
                "errorMessage": "short_reads_1 needs to be a file path with no spaces.\n\nFile needs to exist!"
            },
            "short_reads_2": {
                "type": "string",
                "format": "file-path",
                "exists": true,
                "pattern": "^\\S+\\.f(ast)?q\\.gz$",
                "errorMessage": "short_reads_2 needs to be a file path with no spaces.\n\nFile needs to exist!"
            },
            "long_reads": {
                "type": "string",
                "format": "file-path",
                "exists": true,
                "pattern": "^\\S+\\.f(ast)?q\\.gz$",
                "errorMessage": "long_reads needs to be a file path with no spaces.\n\nFile needs to exist!"
            }
        },
        "required": ["sample", "group", "short_reads_1"]
    },
    "uniqueEntries": ["sample", "run"],
    "dependentRequired": {
        "short_reads_2": ["short_reads_1"],
        "long_reads": ["short_reads_1", "short_reads_2"]
    }
}
